function myFunct(parameter1, parameter2) {
  console.log(parameter1 * parameter2);
}

myFunct(3, 89);

//

var TrueStory = "Smile, beautiful! ";
TrueStory += "That's such a lovely day!";
TrueStory.length;

//

var TrueStory = "Smile, beautiful! ";
TrueStory += "That's such a lovely day!";
TrueStory[0];

//

console.log("My donut tastes like cigarettes.");

//

function someOtherF(a, b) {
  return(a + b) - 7;
}

someOtherF(45, 9);

//

function jLo(condition) {
  if (condition) {
    return "Taco taco";
  }
  return "Burrito burrito";
}

jLo(true);

// switch statement (selecting from many options)

function mySwitchFun(num) {
  var result;
  switch(num) {
    case 1:
    result = "pizza";
    break;
    case 2:
    result = "tomatoes";
    break;
    case 3:
    result = "cake";
    break;
  }
  return result;
}

mySwitchFun(3);

function otherF(val) {
  var answer;
  switch(val) {
    case "do":
    answer =  "don't";
    break;
    case "jump":
    answer = "fly";
    break;
    case "look":
    answer = "sniff";
    break;
    default:
    answer = "WTF";
  }
  return answer;
}

otherF("jump");

// Counting cards

var count = 0;

function cc(card) {
  switch(card) {
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    count += 1;
    break;
    case 10:
    case "J":
    case "Q":
    case "K":
    case "A":
    count -= 1;
    break;
  }

  if (count > 0) {
    return count + " Bet";
  }

  else {
    return count + " Hold";
  }
}

cc(4); cc("J"); cc("A"); cc(6);


// lookup

function whatsInIt(val) {
  var result;
  var here = {
    "cow": "mu mu",
    "cat": "miau miau",
    "lover": "muah muah",
    "bunny": "khrum khrum"
  };
  result = here[val];
  return result;
};

whatsInIt("cat");

// Testing onject for properties

var me = {
  "looks": "good",
  "smells": "nice",
  "tastes": "sweet"
}

function testMe(props) {

  if(me.hasOwnProperty(props)) {
    return me[props];
  }

  return "Are you kidding?";

}

testMe("looks");

// nesting loops

function myLoop(arr) {
  var result = 2;
  for (var i = 0; i < arr.length; i++) {
    for (var j = 0; j < arr[i].length; j++) {
      result *= arr[i][j];
    }
  }
  return result;
}

myLoop([[2, 3],[8, 6],[4]]);

// while loops

var myArray = [];
var i = 0;
while(i < 5) {
  myArray.push(i);
  i++;
}
console.log(myArray);

//
